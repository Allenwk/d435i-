# 以下代码作用：将相机坐标系下的坐标点1*6（x,y,z,rx,ry,rz——deg）转换为机械臂末端坐标系下的位姿信息1*6


import numpy as np

init_pos_camera = np.array([-0.1089, 0.3485, 0.8628, -151.2766, -14.5784, -118.7234])

# 从init_pos_camera中提取x, y, z, rx, ry, rz
x, y, z, rx, ry, rz = init_pos_camera
# 转换为弧度制
rx = np.deg2rad(rx)
ry = np.deg2rad(ry)
rz = np.deg2rad(rz)
# 构建4*4矩阵
init_pos_camera_matrix = np.array([
    [np.cos(ry)*np.cos(rz), -np.cos(rx)*np.sin(rz) + np.sin(rx)*np.sin(ry)*np.cos(rz), np.sin(rx)*np.sin(rz) + np.cos(rx)*np.sin(ry)*np.cos(rz), x],
    [np.cos(ry)*np.sin(rz), np.cos(rx)*np.cos(rz) + np.sin(rx)*np.sin(ry)*np.sin(rz), -np.sin(rx)*np.cos(rz) + np.cos(rx)*np.sin(ry)*np.sin(rz), y],
    [-np.sin(ry), np.sin(rx)*np.cos(ry), np.cos(rx)*np.cos(ry), z],
    [0, 0, 0, 1]
])
print('init_pos_c_m:', init_pos_camera_matrix)

# 将init_pos_camera_matrix与T_camera_to_arm进行矩阵乘法
T_camera_to_arm = np.array([[0.99192999, 0.12020063, 0.04033232, 0.03521465],
                            [-0.08794334, 0.42314794, 0.90178256, 0.00150321],
                            [0.09132829, -0.89805213, 0.43030398, 0.00569499],
                            [0.,         0.,         0.,         1.        ]])  # 第一版RT_c2g
init_pos_arm = np.dot(T_camera_to_arm, init_pos_camera_matrix)

print("init_pos_arm:", init_pos_arm)

# final_pos_arm  此时是 机械臂末端坐标系下 4*4 的形式，下面代码转换为 1*6
x = init_pos_arm[0, 3]
y = init_pos_arm[1, 3]
z = init_pos_arm[2, 3]

rx = np.arctan2(init_pos_arm[2, 1], init_pos_arm[2, 2])
ry = np.arctan2(-init_pos_arm[2, 0], np.sqrt(init_pos_arm[2, 1]**2 + init_pos_arm[2, 2]**2))
rz = np.arctan2(init_pos_arm[1, 0], init_pos_arm[0, 0])
print('rx_rad:', rx)
# 转换为角度制
rx = np.rad2deg(rx)
print('rx_deg:', rx)
ry = np.rad2deg(ry)
rz = np.rad2deg(rz)
init_pos_arm_vector = np.array([x, y, z, rx, ry, rz])
print('init_pos_arm_v:', init_pos_arm_vector)

